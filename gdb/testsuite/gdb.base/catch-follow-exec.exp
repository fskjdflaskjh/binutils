# Copyright 2018 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check whether finish respects the print pretty user setting when printing the
# function result.

standard_testfile

if { [target_info gdb_protocol] != "" } {
    # Even though the feature under features being tested are supported by
    # gdbserver, the way this test is written doesn't make it easy with a
    # remote target.
    unsupported "not native"
    return
}

if { ![remote_file target exists /bin/ls] } {
    unsupported "no ls"
    return
}

if { [build_executable "failed to prepare" $testfile $srcfile debug] == -1 } {
    return -1
}

proc catch_follow_exec { } {
    global binfile
    global gdb_spawn_id

    set test "catch-follow-exec"

    append FLAGS " \"$binfile\""
    append FLAGS " -batch"
    append FLAGS " -ex \"catch exec\""
    append FLAGS " -ex \"set follow-exec-mode new\""
    append FLAGS " -ex \"run\""
    append FLAGS " -ex \"info prog\""

    gdb_exit
    if {[gdb_spawn_with_cmdline_opts "$FLAGS"] != 0} {
	fail "spawn"
	return
    }

    gdb_test_multiple "" "run til exit" {
	"runtime error:" {
	    # Error in case of --enable-ubsan
	    fail "no runtime error"
	}
	eof {
	    set result [wait -i $gdb_spawn_id]
	    verbose $result

	    gdb_assert { [lindex $result 2] == 0 }

	    # We suspect this will be zero instead of one after fixing PR23368
	    # - "gdb goes to into background when hitting exec catchpoint with
	    # follow-exec-mode new"
	    gdb_assert { [lindex $result 3] != 0 }

	    # Error in case of --disable-ubsan, we get
	    # "CHILDKILLED SIGSEGV {segmentation violation}" as extra
	    # argument(s).
	    gdb_assert { [llength $result] == 4 }
	}

	remote_close host
	clear_gdb_spawn_id
    }
}

catch_follow_exec
