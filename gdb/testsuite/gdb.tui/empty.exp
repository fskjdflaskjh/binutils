# Copyright 2019 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test TUI resizing with empty windows.

load_lib "tuiterm.exp"

standard_testfile

Term::clean_restart 24 80

if {![Term::enter_tui]} {
    unsupported "TUI not supported"
}

# Each entry describes a layout.  It has these items:
# 1. Layout name
# 2. Test name
# 3. List of boxes in 80x24 mode
# 4. List of boxes in 90x40 mode
# 5. List of test name and text for the empty window
set layouts {
    {src src {{3 0 77 15}} {{3 0 87 23}}
	{{"no source" "No Source Available"}}}
    {regs src-regs {{0 0 80 8} {3 7 77 8}} {{0 0 90 13} {3 13 87 13}}
	{
	    {"no source" "No Source Available"}
	    {"no regs" "Register Values Unavailable"}
	}}
    {asm asm {{3 0 77 15}} {{3 0 87 24}}
	{"no asm" "No Assembly Available"}}
    {regs asm-regs {{0 0 80 8} {3 7 77 9}} {{0 0 90 13} {3 13 87 14}}
	{
	    {"no asm" "No Assembly Available"}
	    {"no regs" "Register Values Unavailable"}
	}}
    {split split {{3 0 77 8} {3 7 77 9}} {{3 0 87 14} {3 14 87 14}}
	{
	    {"no source" "No Source Available"}
	    {"no asm" "No Assembly Available"}
	}}
    {regs split-regs {{0 0 80 8} {3 7 77 9}} {{0 0 90 13} {3 13 87 14}}
	{
	    {"no asm" "No Assembly Available"}
	    {"no regs" "Register Values Unavailable"}
	}}
}

# Helper function to verify a list of boxes.
proc check_boxes {boxes} {
    set boxno 1
    foreach box $boxes {
	if {$boxno > 1} {
	    # The upper-left corner of the second box may not render
	    # properly, due to overlap.
	    setup_xfail *-*-*
	}
	eval Term::check_box [list "box $boxno"] $box
	incr boxno
    }
}

# Helper function to verify text.
proc check_text {text_list} {
    set text [Term::get_all_lines]
    foreach item $text_list {
	lassign $item testname check
	gdb_assert {[string first $check $text]} $testname
    }
}

foreach layout $layouts {
    lassign $layout name testname small_boxes large_boxes text_list

    with_test_prefix $testname {
	Term::command "layout $name"
	with_test_prefix 80x24 {
	    check_boxes $small_boxes
	    check_text $text_list
	}

	# FIXME: resizing is broken enough that we don't test it for
	# now.
	# Term::resize 40 90
	# with_test_prefix 90x40 {
	#     check_boxes $large_boxes
	#     check_text $text_list
	# }
	# Term::resize 24 80
    }
}
